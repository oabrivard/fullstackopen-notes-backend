{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","axios","get","then","response","data","newObject","post","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","Footer","style","color","fontStyle","fontSize","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7502447.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className='note'>\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  \n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`Note '${note.content}' was already removed from server`)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })      \n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n  \n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n      .catch(error => {\n        const errorMessage = error?.response?.data?.error || 'an error occured on the server'\n        setErrorMessage(errorMessage)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n      })   \n}\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n  \n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n      </div> \n    )\n  }    \n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>      \n      <ul>\n        {notesToShow.map(note => \n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n      <Footer />\n    </div>\n  )\n}\n\nexport default App \n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}